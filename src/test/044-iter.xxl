// -*-js-*-

const classes = __xxl.import("classes");

// Str is a PyIterable:
__xxl.print(",".join("54321".sorted()));
__xxl.print(",".join("54312".reversed()));
var r = "54312".reversed();

__xxl.print("================");
const MyIterator = Class.new({
    name: "MyIterator",
    doc: "a very simple iterator",
    supers: [classes.Iterable, classes.Object], // Iterable is Mixin
    methods: {
	init: function (this, list) {
	    this.list = list;
	    this.i = 0;
	    this.len = list.len();
	},
	iter: function (this) {
	    return(this);
	},
	next: function (this, done) {
	    if (this.i < this.len) {
		var ret = this.list[this.i];
		this.i += 1;
		return(ret);
	    }
	    else {
		done();
	    }
	}
    }
});

const MyIterable = Class.new({
    name: "MyIterator",
    supers: [classes.Iterable, classes.Object],
    methods: {
	init: function (this, list) {
	    this.l = list;
	},
	iter: function (this) {
	    __xxl.print("MyIterable.iter");
	    return(MyIterator.new(this.l));
	}
    }
});

const iterable = MyIterable.new(['1','2','3']);

__xxl.print("==== while");
var iterator = iterable.iter();
break: while (true) {
    __xxl.print(iterator.next(break));
}

__xxl.print("==== iterable.iter()");
iterable.iter().for_each(__xxl.print);
__xxl.print(",".join(iterable.iter()));

__xxl.print("==== iterable");
iterable.for_each(__xxl.print);
__xxl.print(",".join(iterable));

////////////////

__xxl.print("====");
// native Iterable (not PyIterable)
// native methods convert to List first:

var ii = MyIterable.new(['1','3','2']);

__xxl.print("ii.reversed");
__xxl.print(",".join(ii.reversed()));
__xxl.print("ii.sorted");
__xxl.print(",".join(ii.sorted()));
