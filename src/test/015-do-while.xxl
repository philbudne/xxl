// -*-js-*-
// define "do" statement
var p = System.parser.parser;	// Parser object

var Do = Class.new({
    name: "Do",
    supers: [p.Stmt],
    methods: {
	id: function (this) { return("do"); }, // XXX
	std: function (this) {	// parse as statement
	    this.first = p.block();
	    p.advance("while");
	    p.advance("(");
	    this.second = p.expression(0);
	    p.advance(")");
	    p.advance(";");
	    this.arity = "statement";
	    return(this);
	},
	gen: function (this, vmcode) { // gen
	    var top_label = vmcode.get_off();
	    this.first.gen(vmcode);
	    this.second.gen(vmcode); // condition
	    vmcode.emit_iftrue(top_label, this);
	}
    }
});
p.add_symbol_class("do", Do);

//////////////// tests

var i = 4;
do {
    System.print(i);
    i -= 1;
} while (i > 0);

System.print("continue test");
i = 4;
do continue: {
    System.print(i);
    i -= 1;
    continue();
    System.print("here");
} while (i > 0);

System.print("break test");
i = 4;
break:
do {
    System.print(i);
    i -= 1;
    break();
} while (i > 0);
